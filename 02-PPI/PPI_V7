%% PPI V6

folder_path_root = 'C:\Users\Lenovo\Documents\PSM\PPI\data';
spm_path = 'C:\Users\Lenovo\Downloads\spm12';

subjects = {'sub-001', 'sub-002', 'sub-003','sub-004', 'sub-005', 'sub-006', 'sub-007', 'sub-008', 'sub-009','sub-0010' }; 

sub_dir = 'C:\Users\Lenovo\Documents\PSM\PPI\data\sub-001';

%% initilization

addpath(spm_path);
addpath(folder_path_root);
spm('defaults', 'fmri') 
spm_jobman('initcfg')

spm fmri

%% PPI subject lvl - BA2

% VOI = BA2;

for i= 1:length(subjects)

sub_dir = sprintf ('C:\Users\Lenovo\Documents\PSM\PPI\data\%s\1st_level_good_bad_Imag', subjects{i});

cd (sub_dir);

spmmat_path = fullfile(sub_dir, 'SPM.mat');

% Assign this path to matlabbatch
% matlabbatch{1}.spm.stats.ppi.spmmat = {spmmat_path};
% matlabbatch{1}.spm.stats.ppi.type.ppi.voi = {fullfile(sub_dir, 'VOI_rBA2_1.mat')}; %change VOI here
% The problem I got with lines like this one working in batch is I get a cell matlabbatch that has a struct with all paths I saved, and then I can not load variables ppi.x later 

matlabbatch{1}.spm.stats.ppi.spmmat = 'SPM.mat';
matlabbatch{1}.spm.stats.ppi.type.ppi.voi = 'VOI_rBA2_1.mat';
matlabbatch{1}.spm.stats.ppi.type.ppi.u = [1 1 1
                                           4 1 -1]; % careful here with index of contrasts from Sess.U

matlabbatch{1}.spm.stats.ppi.name = 'StimvsImag_rBA2'; 
matlabbatch{1}.spm.stats.ppi.disp = 1;

%fix myb not necessary
%curr_ppifile_dir = fullfile(sub_dir, 'PPI_StimvsImag_1_rBA2.mat'); % automatic name, see ppi.name
%load(curr_ppifile_dir);

%here I tried a longer glm, but was very long, chatgpt suggested this

%load PPI_StimvsImag_rBA2.mat
%%

X1 = [PPI.P PPI.Y PPI.ppi];

[betas, ~, stats] = glmfit(X1, PPI.Y);

% make more general
results_PPI_StimvsImag_rBA2 = table(betas, stats, 'VariableNames', {'Betas', 'Stats'});

end

%% group level 



%% for just Imag rBA2

%change contrasts



%% for Stim SMA
%change contrasts 




%% for Imag SMA
%change contrasts




%%








